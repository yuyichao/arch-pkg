pkgname=libkscreen-git
_realver=0.1-rc1
pkgver=0.1.rc1.9.g38b3a2f
pkgrel=1
pkgdesc="KDE's screen management software."
epoch=1
url="http://quickgit.kde.org/?p=libkscreen.git"
license=('GPL')
arch=('i686' 'x86_64')
depends=('kdelibs')
makedepends=('git' 'cmake' 'automoc4' 'qjson')
provides=("libkscreen=${_realver}")
conflicts=("libkscreen")
options=('strip' 'debug')

_gitname="libkscreen"

_gitroot="git://anongit.kde.org/libkscreen.git"
_gitref=master

_fetch_git() {
  cd "$srcdir"

  if [ -d "$srcdir/$_gitname/.git" ]; then
    cd "$_gitname"
    msg "Reset current branch"
    git reset --hard HEAD
    git clean -fdx
    msg "Fetching branch $_gitref from $_gitroot..."
    git fetch --force --update-head-ok \
      "$_gitroot" "$_gitref:$_gitref" --
    msg "Checking out branch $_gitref..."
    git checkout "$_gitref" --
    git reset --hard "$_gitref"
    git clean -fdx
    msg "The local files are updated."
  else
    msg "Cloning branch $_gitref from $_gitroot to $_gitname..."
    git clone --single-branch --branch "$_gitref" \
      "$_gitroot" "$_gitname"
    cd "$_gitname"
  fi
  msg "GIT checkout done or server timeout"
}

pkgver() {
  local outfile=/dev/null
  [[ -e /dev/tty ]] && outfile=/dev/tty
  (_fetch_git &> ${outfile})
  cd "$srcdir/$_gitname"

  git describe | sed -e 's/^[^0-9]*//' -e 's/-/./g'
}

build() {
  (_fetch_git)
  mkdir -p "$srcdir/$_gitname/build"
  cd "$srcdir/$_gitname/build"

  cmake .. \
    -DCMAKE_BUILD_TYPE=RelWithDebInfo \
    -DCMAKE_INSTALL_PREFIX=/usr \
    -DQT_QMAKE_EXECUTABLE=qmake-qt4
  make
}

package() {
  cd "$srcdir/$_gitname/build"

  make DESTDIR="$pkgdir" install
}
