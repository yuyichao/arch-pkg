# Maintainer: SpepS <dreamspepser at yahoo dot it>

_pkgname=valadoc
pkgname=$_pkgname-git
pkgver=534.5dde44d
pkgrel=1
epoch=1
pkgdesc="A documentation generator for generating API documentation from Vala source code based on libvala."
arch=('i686' 'x86_64')
url="http://live.gnome.org/Valadoc"
license=('GPL')
depends=('vala-git' 'libgee>=0.10.0' 'graphviz')
makedepends=('git')
provides=("$_pkgname")
conflicts=("$_pkgname")
options=('!libtool' 'strip' 'debug')

_gitname="valadoc"

_gitroot="git://git.gnome.org/valadoc"
_gitref=master

_fetch_git() {
  cd "$srcdir"

  if [ -d "$srcdir/$_gitname/.git" ]; then
    cd "$_gitname"
    msg "Reset current branch"
    git reset --hard HEAD
    git clean -fdx
    msg "Fetching branch $_gitref from $_gitroot..."
    git fetch --force --update-head-ok \
      "$_gitroot" "$_gitref:$_gitref" --
    msg "Checking out branch $_gitref..."
    git checkout "$_gitref" --
    git reset --hard "$_gitref"
    git clean -fdx
    msg "The local files are updated."
  else
    msg "Cloning branch $_gitref from $_gitroot to $_gitname..."
    git clone --single-branch --branch "$_gitref" \
      "$_gitroot" "$_gitname"
    cd "$_gitname"
  fi
  msg "GIT checkout done or server timeout"
}

pkgver() {
  local outfile=/dev/null
  [[ -e /dev/tty ]] && outfile=/dev/tty
  (_fetch_git &> ${outfile})
  cd "$srcdir/$_gitname"

  echo "$(git rev-list --count "${_gitref}").$(git rev-parse --short "${_gitref}")"
}

build() {
  (_fetch_git)
  cd "$srcdir/$_gitname"

  ./autogen.sh --prefix=/usr --enable-static=no
  make
}

package() {
  cd "$srcdir/$_gitname"

  make DESTDIR="$pkgdir/" install
}
