# Maintainer: Stefan Husmann <stefan-husmann@t-online.de>
pkgname=emacs-mmm-mode-git
pkgver=377.c563b85
pkgrel=1
epoch=1
pkgdesc="Minor mode for Emacs that allows Multiple Major Modes to coexist in one buffer"
arch=('any')
url="http://mmm-mode.sourceforge.net"
license=('GPL')
makedepends=('git' 'emacs')
provides=('emacs-mmm-mode' 'mmm-mode')
conflicts=('emacs-mmm-mode' 'mmm-mode')

_gitname="mmm-mode"

_gitroot='git://github.com/purcell/mmm-mode.git'
_gitref=master

_fetch_git() {
  cd "$srcdir"

  if [ -d "$srcdir/$_gitname/.git" ]; then
    cd "$_gitname"
    msg "Reset current branch"
    git reset --hard HEAD
    git clean -fdx
    msg "Fetching branch $_gitref from $_gitroot..."
    git fetch --force --update-head-ok \
      "$_gitroot" "$_gitref:$_gitref" --
    msg "Checking out branch $_gitref..."
    git checkout "$_gitref" --
    git reset --hard "$_gitref"
    git clean -fdx
    msg "The local files are updated."
  else
    msg "Cloning branch $_gitref from $_gitroot to $_gitname..."
    git clone --single-branch --branch "$_gitref" \
      "$_gitroot" "$_gitname"
    cd "$_gitname"
  fi
  msg "GIT checkout done or server timeout"
}

pkgver() {
  local outfile=/dev/null
  [[ -e /dev/tty ]] && outfile=/dev/tty
  (_fetch_git &> ${outfile})
  cd "$srcdir/$_gitname"

  echo "$(git rev-list --count "${_gitref}").$(git rev-parse --short "${_gitref}")"
}

build() {
  (_fetch_git)
  cd "$srcdir/$_gitname"

  mv configure.in configure.ac
  ./autogen.sh
  ./configure --prefix=/usr
  make
}

package() {
  cd "$srcdir/$_gitname"

  make DESTDIR="$pkgdir/" install
}
