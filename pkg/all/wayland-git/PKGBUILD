# Maintainer: Joel Teichroeb <joel@teichroeb.net>

pkgbase=wayland
pkgname=$pkgbase-git
_realver=1.2.1
pkgver=1.4.0.5.g8fd2520
pkgrel=1
epoch=1
pkgdesc="A modern display server."
arch=(i686 x86_64)
url="http://wayland.freedesktop.org"
provides=("libwayland-git=${pkgver}" "$pkgbase=$_realver")
conflicts=("libwayland-git" "$pkgbase")
replaces=(libwayland)
license=('MIT')
depends=('libffi')
makedepends=('git' 'expat' 'autoconf' 'automake')
options=(!libtool !staticlibs strip debug)

_gitname="wayland"

_gitroot="git://anongit.freedesktop.org/wayland/wayland"
_gitref=master

# _gitroot="git://github.com/yuyichao/wayland.git"
# _gitref=yyc

_fetch_git() {
  cd "$srcdir"

  if [ -d "$srcdir/$_gitname/.git" ]; then
    cd "$_gitname"
    msg "Reset current branch"
    git reset --hard HEAD
    git clean -fdx
    msg "Fetching branch $_gitref from $_gitroot..."
    git fetch --force --update-head-ok \
      "$_gitroot" "$_gitref:$_gitref" --
    msg "Checking out branch $_gitref..."
    git checkout "$_gitref" --
    git reset --hard "$_gitref"
    git clean -fdx
    msg "The local files are updated."
  else
    msg "Cloning branch $_gitref from $_gitroot to $_gitname..."
    git clone --single-branch --branch "$_gitref" \
      "$_gitroot" "$_gitname"
    cd "$_gitname"
  fi
  msg "GIT checkout done or server timeout"
}

pkgver() {
  local outfile=/dev/null
  [[ -e /dev/tty ]] && outfile=/dev/tty
  (_fetch_git &> ${outfile})
  cd "$srcdir/$_gitname"

  git describe | sed -e 's/-/./g'
}

build() {
  (_fetch_git)

  cd "${srcdir}/${_gitname}"
  ./autogen.sh --prefix=/usr --disable-documentation
  make
}

package() {
  cd "$srcdir/$_gitname"
  make DESTDIR="${pkgdir}" install
}
