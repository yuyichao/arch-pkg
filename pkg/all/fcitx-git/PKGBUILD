# Maintainer: Yichao Yu <yyc1992 AT gmail.com>
# Contributor: Weng XueTian <wengxt AT gmail com>
# Contributor: lh <jarryson AT gmail com>

_pkgname=fcitx
pkgname=$_pkgname-git
pkgver=4.2.8.29.g6eb0e43
_realver=4.2.8
pkgrel=1
epoch=1
pkgdesc="A Flexible Input Method Framework"
arch=("i686" "x86_64")
license=('GPL')
url="http://fcitx-im.org/wiki/Fcitx"
depends=('pango' 'libxinerama' 'shared-mime-info' 'hicolor-icon-theme'
  'desktop-file-utils' 'icu' 'libxkbfile' 'iso-codes' 'libxml2'
  "gtk2>=2.24.20" 'gtk3' 'dbus-core')
makedepends=('git' 'gettext' 'cmake' 'gobject-introspection' 'coreutils'
  'sh' 'qt4')
conflicts=('fcitx' 'fcitx-qt' 'fcitx-qt4' 'fcitx-gtk2' 'fcitx-gtk3'
  'fcitx-keyboard')
provides=("fcitx=${_realver}" "fcitx-qt=${_realver}" "fcitx-qt4=${_realver}"
  "fcitx-gtk2=${_realver}" "fcitx-gtk3=${_realver}" 'fcitx-keyboard=0.1.3')
replaces=('fcitx-keyboard-git')
optdepends=(
  'enchant: for word predication using enchant'
  'presage: for word predication using presage'
  'opencc: for simplified and traditional chinese translation'
  'qt4: for qt4 input method module')
options=('strip' 'debug')
install="$_pkgname.install"

_gitname="fcitx"

_gitroot="git://github.com/fcitx/fcitx.git"
_gitref="master"

# _gitroot="git://github.com/yuyichao/fcitx.git"
# _gitref="codegen"

# _gitroot="ssh://git@bitbucket.org/yuyichao/fcitx.git"
# _gitref="wayland"

_fetch_git() {
  cd "$srcdir"

  if [ -d "$srcdir/$_gitname/.git" ]; then
    cd "$_gitname"
    msg "Reset current branch"
    git reset --hard HEAD
    msg "Fetching branch $_gitref from $_gitroot..."
    git fetch --force --update-head-ok \
      "$_gitroot" "$_gitref:$_gitref" --
    msg "Checking out branch $_gitref..."
    git checkout "$_gitref" --
    git reset --hard "$_gitref"
    msg "The local files are updated."
  else
    msg "Cloning branch $_gitref from $_gitroot to $_gitname..."
    git clone --single-branch --branch "$_gitref" \
      "$_gitroot" "$_gitname"
    cd "$_gitname"
  fi
  msg "GIT checkout done or server timeout"
}

pkgver() {
  local outfile=/dev/null
  [[ -e /dev/tty ]] && outfile=/dev/tty
  (_fetch_git &> ${outfile})
  cd "$srcdir/$_gitname"

  git describe | sed -e 's/-/./g'
}

build() {
  (_fetch_git)

  msg "Creating make environment..."
  mkdir -p "$srcdir/$_gitname-build"

  msg "Starting make..."
  cd "$srcdir/$_gitname-build"
  # export CC=clang
  # export CXX=clang++
  # rm CMakeFiles/2.*/CMakeC{,XX}Compiler.cmake &> /dev/null || true
  [[ -f CMakeCache.txt ]] && rm -v CMakeCache.txt
  cmake ../$_gitname -DCMAKE_INSTALL_PREFIX=/usr \
    -DCMAKE_BUILD_TYPE=RelWithDebInfo \
    -DQT_QMAKE_EXECUTABLE=qmake-qt4 \
    -DENABLE_QT_IM_MODULE=On \
    -DENABLE_GTK2_IM_MODULE=On \
    -DENABLE_GTK3_IM_MODULE=On \
    -DFORCE_OPENCC=On \
    -DFORCE_ENCHANT=On \
    -DFORCE_PRESAGE=On
  make
}

package() {
  cd "$srcdir/$_gitname-build"

  make DESTDIR="$pkgdir" install
}
