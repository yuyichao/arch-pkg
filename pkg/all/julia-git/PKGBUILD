# Maintainer: Lex Black <autumn-wind at web dot de>
# Contributor: Michael Jakl <jakl.michael@gmail.com>
# With contributions from many kind people at https://aur.archlinux.org/packages/julia-git/

BUILD_EXTRA=1

pkgbase=julia-git
if ((BUILD_EXTRA)); then
   pkgname=('julia-git' 'julia-doc-git' 'emacs-julia-mode-git')
else
   pkgname=('julia-git')
fi
pkgver=0.4.0.rc1.373.g042c4d5
pkgrel=1
pkgdesc="Julia is a high-level, high-performance, dynamic programming language."
arch=('any' 'i686' 'x86_64')
url="http://julialang.org"
license=('GPL')
makedepends=('gcc-fortran' 'arpack' 'fftw' 'git' 'gmp' 'libgit2' 'libunwind'
             'llvm' 'mpfr' 'pcre2' 'suitesparse' 'python2-sphinx'
             'python2-sphinx_rtd_theme' 'python2-pip' 'texlive-langcjk'
             'texlive-latexextra' 'emacs' 'openspecfun' 'openblas')
options=('!emptydirs' 'staticlibs' 'debug' 'strip')
source=('git://github.com/JuliaLang/julia'
        '0001-Use-tbaa_immut-for-getfield-of-immutable-types.patch')
md5sums=('SKIP'
         'f09a16d158bcc648fa41f5e2d7b15699')

pkgver() {
  cd julia

  git describe --tags | sed 's/^v//;s/-/./g'
}

prepare() {
  cd julia

  git reset --hard HEAD
  git clean -fdx

  git submodule init
  git submodule sync
  git submodule update

  patch -Np1 < ../0001-Use-tbaa_immut-for-getfield-of-immutable-types.patch

  cd doc

  # They use the Python2 version for sphinx which has on Arch a different name
  sed 's/pip /pip2 /g' -i Makefile
}

case "$CARCH" in
  x86_64)
    _march=x86-64
    _cpu=core-avx2
    ;;
  i686)
    _march=pentium4
    _cpu=pentium4
    ;;
esac

julia_opts=(prefix=/usr sysconfdir=/etc
            # LLVM 3.7 has serious vectorization regressions
            USE_SYSTEM_LLVM=0
            LLVM_VER=3.6.2
            USE_SYSTEM_LIBUNWIND=1
            USE_SYSTEM_PCRE=1
            USE_SYSTEM_LIBM=1
            USE_SYSTEM_OPENLIBM=0
            USE_SYSTEM_OPENSPECFUN=1
            USE_SYSTEM_DSFMT=0
            USE_SYSTEM_BLAS=1
            USE_SYSTEM_LAPACK=1
            USE_SYSTEM_FFTW=1
            USE_SYSTEM_GMP=1
            USE_SYSTEM_MPFR=1
            USE_SYSTEM_ARPACK=1
            USE_SYSTEM_SUITESPARSE=1
            USE_SYSTEM_RMATH=0
            USE_SYSTEM_LIBUV=0
            USE_SYSTEM_UTF8PROC=0
            USE_SYSTEM_LIBGIT2=1
            USE_INTEL_MKL=0
            USE_BLAS64=0
            USE_LLVM_SHLIB=0
            MARCH=$_march
            JULIA_CPU_TARGET=$_cpu
            LIBBLASNAME=libopenblas
            LIBBLAS=-lopenblas
            LIBLAPACKNAME=libopenblas
            LIBLAPACK=-lopenblas)

build() {
  cd julia

  export CC='gcc -flto'
  export CXX='g++ -flto'

  make "${julia_opts[@]}"

  if ! ((BUILD_EXTRA)); then
     return
  fi

  (# Building doc
    cd doc
    make)

  (cd contrib
   emacs --batch --eval \
         '(progn
          (push "." load-path)
          (byte-compile-file "julia-mode.el"))')
}

package_julia-git() {
  arch=('i686' 'x86_64')
  depends=('arpack' 'fftw' 'gmp' 'libgit2' 'libunwind' 'llvm' 'mpfr' 'pcre2'
           'hicolor-icon-theme' 'xdg-utils' 'suitesparse' 'openspecfun'
           'openblas')
  install=julia.install
  conflicts=('julia')

  cd julia

  make install DESTDIR="$pkgdir" "${julia_opts[@]}"

  # Remove doc files
  rm -r "$pkgdir/usr/share/doc/julia"

  ver=$("$pkgdir/usr/bin/julia" \
            -f -e 'print(VERSION.major, ".", VERSION.minor, ".", VERSION.patch)')

  provides=("julia=2:$ver")
}

package_julia-doc-git() {
  arch=('any')
  pkgdesc+=" (Documents)"
  provides=('julia-doc')
  conflicts=('julia-doc')

  cd julia/doc/_build

  mkdir -p "$pkgdir"/usr/share/doc/julia/
  cp -dpr --no-preserve=ownership html "$pkgdir"/usr/share/doc/julia/
}

package_emacs-julia-mode-git() {
  arch=('any')
  pkgdesc="Emacs major mode for the Julia programming language"
  provides=('emacs-julia-mode')
  conflicts=('emacs-julia-mode')
  depends=('emacs')

  cd julia/contrib

  mkdir -p "$pkgdir/usr/share/emacs/site-lisp"
  install -m644 julia-mode.el "$pkgdir/usr/share/emacs/site-lisp"
  install -m644 julia-mode.elc "$pkgdir/usr/share/emacs/site-lisp"
}
